{"version":3,"sources":["theme/colors.ts","components/Graphs/GraphTemplate.tsx","theme/theme.ts","components/Graphs/NombreCandidats.tsx","components/Graphs/MentionBac.tsx","components/Graphs/CapaciteEtDemande.tsx","components/Graphs/RepresentationFilles.tsx","components/Comparer/Comparer.tsx","components/DataViewer/DataViewer.tsx","components/Header/Header.tsx","components/About/About.tsx","components/MapWrapper/MapWrapper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","GraphTemplate","props","ref","createRef","useScreenshot","Container","style","padding","margin","border","borderRadius","Typography","variant","name","children","attribution","theme","createMuiTheme","palette","primary","main","secondary","NombreCandidats","dataAttribution","ResponsiveContainer","width","height","BarChart","data","selectedData","map","a","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","stackId","fill","MentionBac","mentions","key","mention","color","finalData","forEach","object","entry","Ã‰tablissement","Math","floor","push","index","CapaciteEtDemande","keys","category","RepresentationFilles","candidates","admises","domain","Comparer","Paper","length","graphProps","Grid","container","spacing","direction","alignItems","item","Chip","backgroundColor","label","switchContent","useStyles","makeStyles","createStyles","paper","textAlign","text","Height","columns","field","type","hide","DataViewer","classes","className","rows","pageSize","density","checkboxSelection","onSelectionChange","e","ids","newSelection","id","Number","setSelectedRows","selectRows","rowIds","showToolbar","localeText","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","components","Toolbar","GridToolbar","root","flexGrow","marginBottom","iconChart","marginRight","title","Header","AppBar","position","MapWrapper","useState","setMap","featuresLayer","setFeaturesLayer","mapElement","useRef","useEffect","initalFeaturesLayer","VectorLayer","source","VectorSource","initialMap","Map","target","current","undefined","layers","TileLayer","maxZoom","XYZ","url","view","View","projection","center","zoom","controls","features","coord","split","c","feat","Feature","geometry","Point","transform","reverse","setStyle","Style","image","CircleStyle","Fill","radius","getSource","clear","addFeatures","getView","fit","getExtent","App","selectedRows","setRows","content","i","ThemeProvider","Helmet","alignContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72527c10.chunk.js","sourcesContent":["export const colors = [\"#FF8370\", \"#00B1B0\", \"#FEC84D\", \"#E42256\", \"#54A2D2\"]\n","import { Container, Typography } from \"@material-ui/core\"\nimport { createRef, RefObject } from \"react\";\nimport { useScreenshot } from 'use-react-screenshot'\n\nexport interface GraphTemplateProps {\n    children: JSX.Element\n    name: string,\n    attribution: string,\n}\nexport const GraphTemplate = (props: GraphTemplateProps) => {\n    const ref = createRef() as RefObject<HTMLDivElement>\n    const [image, takeScreenshot] = useScreenshot()\n    const getImage = () => takeScreenshot(ref.current)\n    \n    return <>\n        {/* <IconButton onClick={getImage}><PhotoCameraIcon /></IconButton> */}\n        <Container ref={ref} style= {{ padding: 5, margin: 0, border: \"1px solid #BBB\", borderRadius: \"5px\"}}>\n        <Typography variant=\"h5\">{props.name}</Typography>\n        {props.children}\n        <Typography variant=\"subtitle2\">{`https://stephanebranly.github.io/parcoursup-stats - ${props.attribution}`}</Typography>\n        </Container>\n        {/* {image && <a href={image} download=\"graph.png\">Download</a>} */}\n        </>\n}\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#E84545\",\n      },\n      secondary: {\n        main: \"#2B2E4A\",\n      },\n    },\n  });\n  ","import { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar, ResponsiveContainer } from \"recharts\"\nimport { GraphTemplate } from \".\"\nimport { theme } from \"../../theme/theme\"\nimport { DataType } from \"../../type/DataType\"\n\nexport interface NombreCandidatsProps {\n    selectedData: DataType[]\n    dataAttribution: string\n}\nexport const NombreCandidats = (props: NombreCandidatsProps) => {\n    const data = () => {\n      const keys = [\"Effectif total des candidats pour une formation\"]\n      return props.selectedData.map((a) => {return { \"Effectif candidats\": a[\"Effectif total des candidats pour une formation\"] - a[\"Dont effectif des candidates pour une formation\"], \"Effectif candidates\": a[\"Dont effectif des candidates pour une formation\"], \"Ã‰tablissement\": a[\"Ã‰tablissement\"]}})\n    }\n    return <GraphTemplate name=\"Effectif de candidats et candidates\" attribution={props.dataAttribution}><ResponsiveContainer width=\"100%\" height={300}><BarChart data={data()}>\n    <CartesianGrid strokeDasharray=\"3 3\" />\n    <XAxis dataKey=\"Ã‰tablissement\" />\n    <YAxis />\n    <Tooltip />\n    <Legend />\n    <Bar dataKey=\"Effectif candidats\" stackId={'a'} fill={theme.palette.secondary.main} />\n    <Bar dataKey=\"Effectif candidates\" stackId={'a'} fill={theme.palette.primary.main} />\n  </BarChart></ResponsiveContainer></GraphTemplate>\n}\n","import { Tooltip, ResponsiveContainer, Bar, BarChart, CartesianGrid, Legend, XAxis, YAxis } from \"recharts\"\nimport { colors } from \"../../theme/colors\"\nimport { DataType } from \"../../type/DataType\"\nimport { GraphTemplate } from \".\";\nexport interface MentionBacProps {\n    selectedData: DataType[]\n    dataAttribution: string\n}\n\nexport const MentionBac = (props: MentionBacProps) => {\n    const mentions = [{ key: \"% dâ€™admis nÃ©o bacheliers sans information sur la mention au bac\", mention: \"Sans information sur la mention\", color: \"#333\"},\n      { key: \"% dâ€™admis nÃ©o bacheliers sans mention au bac\", mention: \"Sans mention\", color: \"#FF1700\"},\n      { key: \"% dâ€™admis nÃ©o bacheliers avec mention Assez Bien au bac\", mention: \"Assez bien\", color: \"#FF8E00\"},\n      { key: \"% dâ€™admis nÃ©o bacheliers avec mention Bien au bac\", mention: \"Bien\", color: \"#FFE400\"},\n      { key: \"% dâ€™admis nÃ©o bacheliers avec mention TrÃ¨s Bien au bac\", mention: \"TrÃ¨s bien\", color: \"#06FF00\"}]\n\n    const data = () => {\n        const finalData: Record<string, number | string>[] = []\n        mentions.forEach((mention) => { \n            const object: Record<string, number | string> = {}; \n            object['Mention'] = mention.mention\n            props.selectedData.forEach((entry: any) => object[entry.Ã‰tablissement] = Math.floor(entry[mention.key]))\n            finalData.push(object)\n        })\n        return finalData\n    }\n\n    return <GraphTemplate name=\"RÃ©partition des mentions au baccalaurÃ©at\" attribution={props.dataAttribution}><ResponsiveContainer width=\"100%\" height={300}><BarChart data={data()}>\n    <CartesianGrid strokeDasharray=\"3 3\" />\n    <XAxis dataKey=\"Mention\" />\n    <YAxis />\n    <Tooltip />\n    <Legend />\n    {\n        props.selectedData.map((entry, index) => <Bar dataKey={entry.Ã‰tablissement} fill={colors[index]} />)\n    }\n    \n  </BarChart></ResponsiveContainer></GraphTemplate>\n}\n\n\n","import { Tooltip, ResponsiveContainer, Bar, BarChart, CartesianGrid, Legend, XAxis, YAxis } from \"recharts\"\nimport { GraphTemplate } from \".\"\nimport { colors } from \"../../theme/colors\"\nimport { DataType } from \"../../type/DataType\"\nexport interface CapaciteEtDemandeProps {\n    selectedData: DataType[]\n    dataAttribution: string\n}\n\nexport const CapaciteEtDemande = (props: CapaciteEtDemandeProps) => {\n    const keys = [{ key: \"CapacitÃ© de lâ€™Ã©tablissement par formation\", category: \"Effectif pour la formation\"},\n        { key: \"Effectif total des candidats pour une formation\", category: \"Nombre de candidat.e.s\"},\n        ]\n    const data = () => {\n        const finalData: Record<string, number | string>[] = []\n        keys.forEach((key) => { \n            const object: Record<string, number | string> = {}; \n            object['category'] = key.category\n            props.selectedData.forEach((entry: any) => object[entry.Ã‰tablissement] = entry[key.key])\n            finalData.push(object)\n        })\n        return finalData\n    }\n\n    return <GraphTemplate name=\"Effectif de la formation et nombre de candidat.e.s\" attribution={props.dataAttribution}><ResponsiveContainer width=\"100%\" height={300}><BarChart data={data()}>\n    <CartesianGrid strokeDasharray=\"3 3\" />\n    <XAxis dataKey=\"category\" />\n    <YAxis />\n    <Tooltip />\n    <Legend />\n    {\n        props.selectedData.map((entry, index) => <Bar dataKey={entry.Ã‰tablissement} fill={colors[index]} />)\n    }\n    \n  </BarChart></ResponsiveContainer></GraphTemplate>\n}\n\n\n","import { Tooltip, ResponsiveContainer, Bar, BarChart, CartesianGrid, Legend, XAxis, YAxis } from \"recharts\"\nimport { GraphTemplate } from \".\"\nimport { colors } from \"../../theme/colors\"\nimport { DataType } from \"../../type/DataType\"\nexport interface RepresentationFillesProps {\n    selectedData: DataType[]\n    dataAttribution: string\n}\n\nexport const RepresentationFilles = (props: RepresentationFillesProps) => {\n    const effectifCandidatsKey = \"Effectif total des candidats pour une formation\"\n    const effectifCandidatesKey = \"Dont effectif des candidates pour une formation\"\n    const admisesKey = \"% dâ€™admis dont filles\"\n\n    const data = () => {\n        const finalData: Record<string, number | string>[] = []\n        const candidates: Record<string, number | string> = {}\n        candidates[\"category\"] = \"% de candidates\"\n\n        const admises: Record<string, number | string> = {}\n        admises['category'] = \"% d'admises\"\n\n        props.selectedData.forEach((entry: any) => \n        {\n            candidates[entry.Ã‰tablissement] = Math.floor(entry[effectifCandidatesKey] / entry[effectifCandidatsKey] * 100)\n            admises[entry.Ã‰tablissement] = Math.floor(entry[admisesKey])\n        })\n        finalData.push(candidates)\n        finalData.push(admises)\n        return finalData\n    }\n\n    return <GraphTemplate name=\"ReprÃ©sentation des filles (%)\" attribution={props.dataAttribution}><ResponsiveContainer width=\"100%\" height={300}><BarChart data={data()}>\n    <CartesianGrid strokeDasharray=\"3 3\" />\n    <XAxis dataKey=\"category\" />\n    <YAxis domain={[0, 100]} />\n    <Tooltip />\n    <Legend />\n    {\n        props.selectedData.map((entry, index) => <Bar dataKey={entry.Ã‰tablissement} fill={colors[index]} />)\n    }\n    \n  </BarChart></ResponsiveContainer></GraphTemplate>\n}\n\n\n","import {\n    Typography,\n    Paper,\n    Grid,\n    Chip,\n    Container,\n  } from \"@material-ui/core\";\nimport { colors } from \"../../theme/colors\";\nimport { DataType } from \"../../type/DataType\";\nimport { CapaciteEtDemande, MentionBac, NombreCandidats, RepresentationFilles } from \"../Graphs\";\nexport interface ComparerProps {\n    selectedData: DataType[]\n    dataAttribution: string\n}\n\nconst Comparer = (props: ComparerProps) => {\n    const tagSchools = () => {\n       return props.selectedData.map((entry, index) => <Grid item><Chip style={{ backgroundColor: colors[index]}} label={entry.Ã‰tablissement}/></Grid>)\n    }\n\n    const switchContent = () => {\n       const length = props.selectedData.length\n       const graphProps = { \n           dataAttribution: props.dataAttribution,\n           selectedData: props.selectedData\n       }\n       if (!length) return <Typography>Selectionnez des Ã©coles Ã  comparer</Typography>\n       if (length > 5) return <Typography>Selectionnez au plus 5 Ã©coles</Typography>\n       return <Grid container \n                spacing={10}\n                direction=\"column\"\n                alignItems=\"stretch\">\n           <Grid item><Grid container direction=\"row\" spacing={2}>{tagSchools()}</Grid></Grid>\n           <Grid item><CapaciteEtDemande {...graphProps} /></Grid>\n           <Grid item><RepresentationFilles {...graphProps} /></Grid>\n           <Grid item><NombreCandidats {...graphProps} /></Grid>\n           <Grid item><MentionBac {...graphProps} /></Grid>\n           </Grid>\n    }\n    return <Paper><Container>{switchContent()}</Container></Paper>;\n}\n\nexport default Comparer\n","import React, { useState, useEffect } from \"react\";\nimport { DataGrid, ColDef, ValueGetterParams, GridToolbar, RowId } from '@material-ui/data-grid';\nimport { createStyles, makeStyles, Paper, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        Height: theme.spacing(60),\n      },\n  }),\n);\n\n\nconst columns: ColDef[] = [\n  { field: \"id\", type: 'number', hide: true},\n  { field: \"Session\", hide: true},\n  { field: \"Statut de lâ€™Ã©tablissement de la filiÃ¨re de formation (public, privÃ©â€¦)\", hide: false, width: 80},\n  { field: \"Code UAI de l'Ã©tablissement\", hide: true},\n  { field: \"Ã‰tablissement\", hide: false, width: 300},\n  { field: \"Code dÃ©partemental de lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"DÃ©partement de lâ€™Ã©tablissement\", hide: true, width: 200},\n  { field: \"RÃ©gion de lâ€™Ã©tablissement\", hide: true, width: 200},\n  { field: \"AcadÃ©mie de lâ€™Ã©tablissement\", hide: false, width: 100},\n  { field: \"FiliÃ¨re de formation trÃ¨s agrÃ©gÃ©e\", hide: false, width: 200},\n  { field: \"FiliÃ¨re de formation\", hide: false, width: 200},\n  { field: \"Concours communs et banques d'Ã©preuves\", hide: true},\n  { field: \"FiliÃ¨re de formation dÃ©taillÃ©e\", hide: true},\n  { field: \"FiliÃ¨re de formation trÃ¨s dÃ©taillÃ©e\", hide: true},\n  { field: \"Lien de la formation sur la plateforme Parcoursup\", hide: true},\n  { field: \"CoordonnÃ©es GPS de la formation\", hide: true},\n  { field: \"CapacitÃ© de lâ€™Ã©tablissement par formation\", hide: true, type: 'number'},\n  { field: \"Effectif total des candidats pour une formation\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidates pour une formation\", hide: true, type: 'number'},\n  { field: \"Effectif total des candidats en phase principale\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidats ayant postulÃ© en internat\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers gÃ©nÃ©raux en phase principale\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidats boursiers nÃ©o bacheliers gÃ©nÃ©raux en phase principale\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers technologiques en phase principale\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidats boursiers nÃ©o bacheliers technologiques en phase principale\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers professionnels en phase principale\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidats boursiers nÃ©o bacheliers professionnels en phase principale\", hide: true, type: 'number'},\n  { field: \"Effectif des autres candidats en phase principale\", hide: true, type: 'number'},\n  { field: \"Effectif total des candidats en phase complÃ©mentaire\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers gÃ©nÃ©raux en phase complÃ©mentaire\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers technologique en phase complÃ©mentaire\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers professionnels en phase complÃ©mentaire\", hide: true, type: 'number'},\n  { field: \"Effectifs des autres candidats en phase complÃ©mentaire\", hide: true, type: 'number'},\n  { field: \"Effectif total des candidats classÃ©s par lâ€™Ã©tablissement en phase principale\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats classÃ©s par lâ€™Ã©tablissement en phase complÃ©mentaire\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats classÃ©s par lâ€™Ã©tablissement en internat (CPGE)\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats classÃ©s par lâ€™Ã©tablissement hors internat (CPGE)\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers gÃ©nÃ©raux classÃ©s par lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidats boursiers nÃ©o bacheliers gÃ©nÃ©raux classÃ©s par lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers technologiques classÃ©s par lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidats boursiers nÃ©o bacheliers technologiques classÃ©s par lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"Effectif des candidats nÃ©o bacheliers professionnels classÃ©s par lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidats boursiers nÃ©o bacheliers professionnels classÃ©s par lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"Effectif des autres candidats classÃ©s par lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"Effectif total des candidats ayant reÃ§u une proposition dâ€™admission de la part de lâ€™Ã©tablissement\", hide: true, type: 'number'},\n  { field: \"Rang du dernier appelÃ©\", hide: true, type: 'number'},\n  { field: \"Effectif total des candidats ayant acceptÃ© la proposition de lâ€™Ã©tablissement (admis)\", hide: true, type: 'number'},\n  { field: \"Dont effectif des candidates admises\", hide: true, type: 'number'},\n  { field: \"Effectif des admis en phase principale\", hide: true, type: 'number'},\n  { field: \"Effectif des admis en phase complÃ©mentaire\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis ayant reÃ§u leur proposition dâ€™admission Ã  l'ouverture de la procÃ©dure principale\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis ayant reÃ§u leur proposition dâ€™admission avant le baccalaurÃ©at\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis ayant reÃ§u leur proposition dâ€™admission avant la fin de la procÃ©dure principale\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis en internat\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis boursiers nÃ©o bacheliers\", hide: true, type: 'number'},\n  { field: \"Effectif des admis nÃ©o bacheliers\", hide: true, type: 'number'},\n  { field: \"Effectif des admis nÃ©o bacheliers gÃ©nÃ©raux\", hide: true, type: 'number'},\n  { field: \"Effectif des admis nÃ©o bacheliers technologiques\", hide: true, type: 'number'},\n  { field: \"Effectif des admis nÃ©o bacheliers professionnels\", hide: true, type: 'number'},\n  { field: \"Effectif des autres candidats admis\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis nÃ©o bacheliers sans information sur la mention au bac\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis nÃ©o bacheliers sans mention au bac\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis nÃ©o bacheliers avec mention Assez Bien au bac\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis nÃ©o bacheliers avec mention Bien au bac\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis nÃ©o bacheliers avec mention TrÃ¨s Bien au bac\", hide: true, type: 'number'},\n  { field: \"Effectif des admis nÃ©o bacheliers gÃ©nÃ©raux ayant eu une mention au bac\", hide: true, type: 'number'},\n  { field: \"Effectif des admis nÃ©o bacheliers technologiques ayant eu une mention au bac\", hide: true, type: 'number'},\n  { field: \"Effectif des admis nÃ©o bacheliers professionnels ayant eu une mention au bac\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis issus du mÃªme Ã©tablissement (BTS/CPGE)\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admises issues du mÃªme Ã©tablissement (BTS/CPGE)\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis issus de la mÃªme acadÃ©mie\", hide: true, type: 'number'},\n  { field: \"Dont effectif des admis issus de la mÃªme acadÃ©mie (Paris/CrÃ©teil/Versailles rÃ©unies)\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis ayant reÃ§u leur proposition dâ€™admission Ã  l'ouverture de la procÃ©dure principale\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis ayant reÃ§u leur proposition dâ€™admission avant le baccalaurÃ©at\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis ayant reÃ§u leur proposition dâ€™admission avant la fin de la procÃ©dure principale\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis dont filles\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers issus de la mÃªme acadÃ©mie\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers issus de la mÃªme acadÃ©mie (Paris/CrÃ©teil/Versailles rÃ©unies)\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers issus du mÃªme Ã©tablissement (BTS/CPGE)\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers boursiers\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers sans information sur la mention au bac\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers sans mention au bac\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers avec mention Assez Bien au bac\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers avec mention Bien au bac\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers avec mention TrÃ¨s Bien au bac\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers gÃ©nÃ©raux\", hide: true, type: 'number'},\n  { field: \"Dont % dâ€™admis avec mention\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers technologiques\", hide: true, type: 'number'},\n  { field: \"Dont % dâ€™admis avec mention__1\", hide: true, type: 'number'},\n  { field: \"% dâ€™admis nÃ©o bacheliers professionnels\", hide: true, type: 'number'},\n  { field: \"Dont % dâ€™admis avec mention__2\", hide: true, type: 'number'},\n  { field: \"tri\", hide: true},\n];\n\nexport interface DataViewerProps {\n  rows: Array<never>\n  setSelectedRows: React.Dispatch<React.SetStateAction<unknown[]>>\n}\n\nconst DataViewer = (props: DataViewerProps) => {\n  const classes = useStyles(); \n\n  const selectRows = (ids: RowId[]) => {\n    const newSelection = ids.map((id) => props.rows[Number(id) - 1])\n    props.setSelectedRows(newSelection)\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <div style={{ height: 600, width: '100%' }}>\n        <DataGrid \n          rows={props.rows} \n          columns={columns}\n          pageSize={50}\n          density=\"compact\"\n          checkboxSelection\n          onSelectionChange={(e) => selectRows(e.rowIds)} \n          showToolbar\n          localeText={{\n            toolbarDensity: 'Size',\n            toolbarDensityLabel: 'Size',\n            toolbarDensityCompact: 'Small',\n            toolbarDensityStandard: 'Medium',\n            toolbarDensityComfortable: 'Large',\n          }}\n          components={{\n            Toolbar: GridToolbar,\n          }}/>\n      </div> \n    </Paper>\n  );\n}\n\nexport default DataViewer","import {\n    AppBar,\n    Toolbar,\n    Typography,\n    makeStyles,\n    createStyles,\n    Theme,\n  } from \"@material-ui/core\";\n  import BarChartIcon from '@material-ui/icons/BarChart';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      marginBottom: theme.spacing(4),\n    },\n    iconChart: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\n\nconst Header = () => {\n    const classes = useStyles(); \n    \n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n            <Toolbar>\n                <BarChartIcon className={classes.iconChart}/>\n                <Typography variant=\"h6\" className={classes.title}>\n                    Parcoursup - Statistiques\n                </Typography>\n            </Toolbar>\n            </AppBar>\n        </div>\n        );\n    \n}\n\nexport default Header","import {\n    Grid,\n    createStyles,\n    makeStyles,\n    Theme,\n    Paper,\n  } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n  }),\n);\n\n\nconst About = () => {\n    const classes = useStyles(); \n    \n    return (\n        <Grid item>\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"stretch\"\n            >\n                <Grid item>\n                    <Paper className={classes.paper}>A propos de l'auteur du site : stephane_branly</Paper>\n                </Grid>\n                <Grid item>\n                    <Paper className={classes.paper}>Informations sur le site : Site en contruction</Paper>\n                </Grid>\n            </Grid>\n        </Grid>\n        );\n}\n\nexport default About\n","import React, { useState, useRef, useEffect, RefObject } from 'react';\n\nimport './MapWrapper.css'\n\nimport Map from 'ol/Map'\nimport View from 'ol/View'\nimport TileLayer from 'ol/layer/Tile'\nimport VectorLayer from 'ol/layer/Vector'\nimport VectorSource from 'ol/source/Vector'\nimport XYZ from 'ol/source/XYZ'\nimport Geometry from 'ol/geom/Geometry';\nimport { Paper } from '@material-ui/core';\nimport { DataType } from '../../type/DataType';\nimport { Feature } from 'ol';\nimport Point from 'ol/geom/Point';\nimport {transform} from 'ol/proj'\nimport Style from 'ol/style/Style';\nimport { colors } from '../../theme/colors';\nimport CircleStyle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\n\nexport interface MapWrapperProps {\n  selectedData: DataType[]\n  dataAttribution: string\n}\n\n\nconst MapWrapper = (props: MapWrapperProps) => {\n    const [ map, setMap ] = useState<Map>()\n    const [ featuresLayer, setFeaturesLayer ] = useState<VectorLayer<VectorSource<Geometry>>>()\n\n  const mapElement = useRef() as RefObject<HTMLDivElement>\n\n  useEffect( () => {\n    const initalFeaturesLayer = new VectorLayer({\n      source: new VectorSource()\n    })\n\n    const initialMap = new Map({\n      target:  mapElement.current ?? undefined,\n      layers: [\n        \n        new TileLayer({\n          maxZoom: 19,\n          source: new XYZ({\n            url: 'https://tile.openstreetmap.org/{z}/{x}/{y}.png',\n          })\n        }),\n        initalFeaturesLayer\n      ],\n      view: new View({\n        projection: 'EPSG:3857',\n        center: [0, 0],\n        zoom: 2\n      }),\n      controls: []\n    })\n\n    // save map and vector layer references to state\n    setMap(initialMap)\n    setFeaturesLayer(initalFeaturesLayer)\n\n  },[])\n\n  useEffect(() => {\n    if(!featuresLayer || props.selectedData.length === 0) return\n\n    const features = props.selectedData.map((entry, index) => {\n      const coord = entry['CoordonnÃ©es GPS de la formation'].split(',').map((c) => Number(c))\n      const feat =  new Feature(\n        { geometry: new Point(transform(coord.reverse(), 'EPSG:4326', 'EPSG:3857')),}\n      )\n      feat.setStyle(\n        new Style({ \n          image: new CircleStyle({\n            fill: new Fill({ color: colors[index]}),\n            radius: 5,\n          }),\n        })\n      )\n      return feat\n    })\n    const source = featuresLayer.getSource()\n    source.clear()\n    source.addFeatures(features)\n    if (!map) return\n    map.getView().fit(source.getExtent(), {\n      padding: [100,100,100,100]\n    })\n  }, [featuresLayer, map, props.selectedData])\n\n  return (\n    <Paper><div ref={mapElement} className=\"map-container\"></div></Paper>\n  )\n}\n\nexport default MapWrapper","import { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport data from \"./data/parcoursup2019.json\"\n\nimport { Helmet } from \"react-helmet\";\n\nimport { Container, Grid } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\n\nimport { Header, DataViewer, Comparer, MapWrapper } from './components';\nimport { DataType } from './type/DataType';\nimport { theme } from './theme/theme';\n\nfunction App() {\n  const [selectedRows, setSelectedRows] = useState<Array<unknown>>([])\n\n  const [rows, setRows] = useState([]);\n  const [dataAttribution, setDataAttribution] = useState(\"Parcoursup - 2019\");\n   \n  useEffect(() => {\n    var content = (data as any).object;\n    for(var i=0; i < content.length; i++){\n      (content[i] as any).id = i+1;\n  }\n    setRows(content);\n  },[]);\n  \n  return (\n    <ThemeProvider theme={theme}>\n        <Helmet>\n            <title>Parcoursup - Statistiques</title>\n            <meta name=\"description\" content=\"Visualiseur des donnÃ©es publiques de Parcoursup\" />\n        </Helmet>\n        <Header/>\n        <Container><Grid \n          container\n          direction=\"column\"\n          spacing={10}\n          alignContent=\"stretch\"\n          alignItems=\"stretch\"\n        >\n          <Grid item>\n            <DataViewer setSelectedRows={setSelectedRows} rows={rows}></DataViewer>\n          </Grid>\n          <Grid item>\n            <MapWrapper selectedData={selectedRows as DataType[]} dataAttribution={dataAttribution} />\n          </Grid>\n          <Grid item>\n            <Comparer selectedData={selectedRows as DataType[]} dataAttribution={dataAttribution}/>\n          </Grid>\n        </Grid>\n        </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}